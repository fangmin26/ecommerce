services:

  postgres_db:
    image: postgres
    restart: always
    container_name: postgres_db
    environment:
      - POSTGRES_USER=commerce_user
      - POSTGRES_PASSWORD=commerce_pass
      - POSTGRES_DB=ecommerce
    ports:
      - "5432:5432"
    networks:
      - postgres-network

  nestjs_api:
    build:
      dockerfile: Dockerfile
      context: .
      target: development

    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - 3000:3000
      - 443:443
    depends_on:
      - postgres_db #상단 이름 인식
    networks:
      - postgres-network
      
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "16543:80"
    depends_on:
      - postgres_db
    networks:
      - postgres-network

  # nestjs_api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     # Only will build development stage from our dockerfile
  #     target: development
  #   volumes:
  #     - .:/usr/src/app
  #   env_file:
  #     - .env
  #   # Run a command against the development stage of the image
  #   command: npm run start:dev
  #   ports:
  #     # - 3000:3000
  #     - 443:443 
  #     # https://localhost 로 가능 
  #   depends_on:
  #     - postgres_db
  #   networks:
  #     - postgres-network

volumes:
  postgresql-data:
    driver: cio
    driver_opts:
      profile: "POSTGRESQL"

networks:
  postgres-network:
    driver: bridge